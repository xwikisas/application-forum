<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="ForumCode.Actions" locale="">
  <web>ForumCode</web>
  <name>Actions</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## check token
#if ("$!request.action" != '' &amp;&amp; !$services.csrf.isTokenValid("$!request.form_token"))
  #set($discard = $response.sendRedirect($services.csrf.getResubmissionURL()))
#else
  ## We expect an ajax request for this deleteforum action
  #if ("$!request.action" == 'deleteforum')
    ## We assume all paths are bad requests, so we have to change status code for other cases.
    #set($discard = $response.setStatus(400))
    #set($space = "$!{request.space}")
    #set($webHomeDoc = $xwiki.getDocument("${space}.WebHome"))
    ## Check if the space is a froum space
    #if ($space != '' &amp;&amp; $webHomeDoc.getObject('ForumCode.ForumClass') != $util.null)
      ## Chck if the current user has delete right on current forum and all the related forum entities.
      #set($results = $services.query.xwql('WHERE doc.space=:forumSpace OR doc.space LIKE :forum').bindValue('forumSpace', $space).bindValue('forum', "${space}.%").execute())
      #set ($noDeleteRightPages = [])
      #foreach ($fullName in $results)
        #if (!$services.security.authorization.hasAccess('delete', $xcontext.userReference, $services.model.resolveDocument($fullName)))
          #set ($discard = $noDeleteRightPages.add($fullName))
        #end
      #end
      #if ($noDeleteRightPages.size() == 0)
        ## We need to delete all documents of the forum space.
        #foreach ($fullName in $results)
          #set($discard = $xwiki.getDocument($fullName).delete())
        #end
        #set($discard = $response.setStatus(200)) ok
      #else
        ## Forbidden action.
        #set($discard = $response.setStatus(403))
      #end
    #end
  #elseif ("$!request.action" == 'addtopic')
    #set ($title = $request.title.trim())
    #if ("$!title" != '')
      #if ("$!request.space" != '')
        #getForumEntityDoc($request.space $request.fakeDocName $title $entityDoc)
        #if ($entityDoc.hasAccessLevel('edit'))
          ## Add the TopicClass object
          #set($discard = $entityDoc.updateObjectFromRequest('ForumCode.TopicClass'))
          ## We add a XWiki.AverageRatingsClass object to simplify sorting topics by votes
          ## when some topics don't have any votes.
          #set($averageObj = $entityDoc.newObject('XWiki.AverageRatingsClass'))
          #set($discard = $averageObj.set('nbvotes', 0))
          #set($discard = $averageObj.set('method', 'average'))
          #set($discard = $entityDoc.setTitle($title))
          #set($discard = $entityDoc.setParent("$!request.parent"))
          #set($discard = $entityDoc.save())
          #if ("$!request.xredirect" != '')
            #set($discard = $response.sendRedirect("$!request.xredirect"))
          #end
        #else
          #set($discard = $response.setStatus(403))
          {{warning}}$services.localization.render('conversations.create.error.topic.norights'){{/warning}}
        #end
      #else
        {{warning}}$services.localization.render('conversations.create.error.missingmetadata'){{/warning}}
      #end
    #else
      #set($discard = $response.setStatus(403))
      {{warning}}$services.localization.render('conversations.create.error.missingtitle'){{/warning}}
    #end
  #elseif ("$!request.action" == 'addanswer')
    #if ("$!request.space" != '')
      #set ($title = "Answer_${datetool.date.time}_${mathtool.random(1, 99)}")
      #getForumEntityDoc($request.space $request.fakeDocName $title $entityDoc)
      #if ($entityDoc.hasAccessLevel('edit'))
        #set($discard = $entityDoc.setParent("${request.parent}"))
        #set($discard = $entityDoc.updateObjectFromRequest('ForumCode.AnswerClass'))
        #set($discard = $entityDoc.save())
        #if ("$!request.xredirect" != '')
          #set($discard = $response.sendRedirect("$!request.xredirect"))
        #end
      #else
        #set($discard = $response.setStatus(403))
        {{warning}}$services.localization.render('conversations.create.error.answer.norights'){{/warning}}
      #end
    #else
      {{warning}}Not enough parameters.{{/warning}}
    #end
  #elseif ("$!request.action" == 'deleteconversation' || "$!request.action" == 'deletecomment')
    #set($isDeleteComment = "$!request.action" == 'deletecomment')
    #set($conversationDoc = $xwiki.getDocument("$!request.conversationdoc"))
    #set($conversationObj = $conversationDoc.getObject('ForumCode.AnswerClass'))
    #set($isAnswer = false)
    #if ($conversationObj)
      #set($isAnswer = true)
    #end
    #set($topicObj = $conversationDoc.getObject('ForumCode.TopicClass'))
    #if ($isDeleteComment)
      #set($commentNumber = $util.parseInt("$!request.commentnumber"))
      #set($commentObj = $conversationDoc.getObject('XWiki.XWikiComments', $commentNumber))
    #end
    #if (!$conversationDoc.isNew() &amp;&amp; ($conversationObj||$topicObj) &amp;&amp; (!$isDeleteComment || $commentObj))
      ## check rights
      #set($requiredRight = 'edit')
      #if (!$isDeleteComment)
        #set($requiredRight = 'delete')
      #end
      #if ($conversationDoc.hasAccessLevel($requiredRight))
        ## do the action then send a mail
        ## 0. collect some data we need after
        ## get a representation of the deleted item
        #set($itemRepresentation = '')
        #if ($isDeleteComment)
          #set($itemRepresentation = $commentObj.getProperty('comment').value)
        #elseif ($isAnswer)
          #set($itemRepresentation = $conversationObj.getProperty('description').value)
        #else
          #set($itemRepresentation = $conversationDoc.displayTitle)
        #end
        ## get the item author to send mail after
        #set($itemAuthor = '')
        #if ($isDeleteComment)
          #set($itemAuthor = $commentObj.getProperty('author').value)
        #else
          #set($itemAuthor = $conversationDoc.creator)
        #end
        ## 1. do the action
        #set ($target = $conversationDoc)
        #if ($isDeleteComment)
          #set ($target = "${conversationDoc.parent}:xwikicomment_${conversationDoc.documentReference.lastSpaceReference.name}_${commentNumber}")
          #set($discard = $conversationDoc.removeObject($commentObj))
          #set($discard = $conversationDoc.save($services.localization.render("conversations.${request.action}.changecomment")))
        #else
          #set($discard = $conversationDoc.delete())
          ## if we are a topic delete the answers
          #if ($topicObj)
            #set($answers = $services.query.xwql('from doc.object(ForumCode.AnswerClass) as answer where doc.space like :spacePrefix').bindValue('spacePrefix', "${conversationDoc.space}.%").execute())
            #foreach ($answer in $answers)
              #set($discard = $xwiki.getDocument($answer).deleteWithProgrammingRights())
            #end
          #else 
            #set ($target = "${conversationDoc.parent}%${conversationDoc.documentReference.lastSpaceReference.name}")
          #end
        #end
        ## delete existing flags on this conversation
        #deleteFlags($target)
        ## 2. send an email
        ## get the email of the dude to send the mail to
        #set($itemAuthorUser = $xwiki.getUser($itemAuthor))
        #set($itemAuthorEmail = $itemAuthorUser.email)
        #set($mailsent = '1')
        #if ("$!itemAuthorEmail" != '')
          #set ($sender = $xwiki.getUserName($xcontext.user, false))
          #if ("$!{xwiki.getXWikiPreference('admin_email')}" != '')
            #set ($sender = "$sender &lt;$!{xwiki.getXWikiPreference('admin_email')}&gt;")
          #else
            #set($sender = "$!{escapetool.q($sender)} &lt;noreply@$!{request.serverName}&gt;")
          #end
          #set($deleteAction = 'topic')
          #if ($isDeleteComment)
            #set($deleteAction = 'comment')
          #elseif ($isAnswer)
            #set($deleteAction = 'answer')
          #end
          #set($deletedDoc = $conversationDoc)
          #set($map = { 'action' : "$deleteAction" , 'deleted_content' : "$!{itemRepresentation}", 'deletedDoc' : "$!{deletedDoc}"})
          #set($result = $xwiki.mailsender.sendMessageFromTemplate($sender, $itemAuthorEmail, ${util.null}, ${util.null}, $xcontext.language, 'ForumCode.Actions', $map))
          #if ($result != 0)
            #set($mailsent = '0')
          #end
        #else
          #set($mailsent = '0')
        #end
        #if ($isAnswer)
          #set($discard = $response.setContentType('application/json'))
          $jsontool.serialize({'success' : $request.action, 'mailsent' : $mailsent})
        #else
          #if ("$!request.xredirect" != '')
            #set($discard = $response.sendRedirect("$!request.xredirect?success=${request.action}&amp;mailsent=$!{mailsent}"))
          #end
        #end
      #else
        ## set the status and print a message
        #set($discard = $response.setStatus(403))
        {{warning}}$services.localization.render("conversations.${request.action}.error.norights", [$!request.xredirect]){{/warning}}
      #end
    #else
      ## set the status and print a message
      #set($discard = $response.setStatus(404))
      {{warning}}$services.localization.render("conversations.${request.action}.error.notfound",  [$!request.xredirect ]){{/warning}}
    #end
  #else
    {{warning}}No action specified.{{/warning}}
  #end##action switch
#end##csrf token verification
#set($docextras = [])
#macro (deleteFlags $target)
  ## When an entity is deleted, delete all its flags + all subentityes' flags. E.g: Topic &gt; ANswer &gt; Comments
  #set ($query = 'from doc.object(ForumCode.FlagClass) as flag where flag.target like :target')
  #set ($flags = $services.query.xwql($query).bindValue('target', "${target}%").execute())
  #foreach ($flag in $flags)
    #set($discard = $xwiki.getDocument($flag).delete())
  #end
#end
#macro (getForumEntityDoc $parentSpace $fakeDocName $title $entityDoc)
  #set ($parentReference = $services.model.resolveSpace($parentSpace))
  #set ($entitySpaceReference = $services.model.createSpaceReference($title, $parentReference))
  #set ($entityDocReference = $services.model.createDocumentReference('WebHome', $entitySpaceReference))
  ## Rename the fake document with the real one in order to keep initial actions performed in the form (e.g: attaching an image).
  #set ($fakeDocRef = $services.model.resolveDocument($fakeDocName))
  #set ($discard = $services.refactoring.rename($fakeDocRef, $entityDocReference).join())
  #set ($entityDoc = $xwiki.getDocument($entityDocReference))
  ## The default language is set on a document at the moment of the first edit, when the document is created.
  ## This condition is not met with the current "Fake document" strategy and we need to explicitly set the locale.
  #set ($discard = $entityDoc.document.setDefaultLocale($xwiki.localePreference))
#end</content>
  <object>
    <name>ForumCode.Actions</name>
    <number>0</number>
    <className>XWiki.Mail</className>
    <guid>653bd014-09b0-47dc-9e8a-84a6882db59b</guid>
    <class>
      <name>XWiki.Mail</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <html>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>html</name>
        <number>4</number>
        <prettyName>HTML</prettyName>
        <restricted>0</restricted>
        <rows>15</rows>
        <size>80</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </html>
      <language>
        <disabled>0</disabled>
        <name>language</name>
        <number>2</number>
        <prettyName>Language</prettyName>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </language>
      <subject>
        <disabled>0</disabled>
        <name>subject</name>
        <number>1</number>
        <prettyName>Subject</prettyName>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </subject>
      <text>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>text</name>
        <number>3</number>
        <prettyName>Text</prettyName>
        <restricted>0</restricted>
        <rows>15</rows>
        <size>80</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </text>
    </class>
    <property>
      <html>$services.localization.render("forum.mail.notif.${action}.delete.message")
&lt;br /&gt;&lt;br /&gt;
$deleted_content
#if ($action != 'comment')
  &lt;a href="$xwiki.getURL($deletedDoc, 'view', 'viewer=recyclebin')"&gt;$services.localization.render("forum.mail.notif.delete.view")&lt;/a&gt;
#end
&lt;br /&gt;&lt;br /&gt;
$services.localization.render("forum.mail.notif.delete.thanks")</html>
    </property>
    <property>
      <language>en</language>
    </property>
    <property>
      <subject>$services.localization.render("forum.mail.notif.${action}.delete.title")</subject>
    </property>
    <property>
      <text>$services.localization.render("forum.mail.notif.${action}.delete.message")

$deleted_content
#if ($action != 'comment')
  $xwiki.getURL($deletedDoc, 'view', 'viewer=recyclebin')
#end

$services.localization.render("forum.mail.notif.delete.thanks")</text>
    </property>
  </object>
</xwikidoc>
